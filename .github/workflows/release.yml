name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get dependencies
      run: go mod download

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        if [ "$GOOS" = "windows" ]; then
          go build -ldflags="-s -w" -o dist/codegenius-${GOOS}-${GOARCH}.exe cmd/main.go
        else
          go build -ldflags="-s -w" -o dist/codegenius-${GOOS}-${GOARCH} cmd/main.go
        fi

    - name: Create Release Archive
      run: |
        cd dist
        if [ "${{ matrix.goos }}" = "windows" ]; then
          zip codegenius-${{ matrix.goos }}-${{ matrix.goarch }}.zip codegenius-${{ matrix.goos }}-${{ matrix.goarch }}.exe
        else
          tar -czf codegenius-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz codegenius-${{ matrix.goos }}-${{ matrix.goarch }}
        fi

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          dist/codegenius-${{ matrix.goos }}-${{ matrix.goarch }}*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  homebrew:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Update Homebrew Formula
      run: |
        echo "Homebrew formula update would go here"
        # This would typically push to a homebrew tap repository 